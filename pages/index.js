import React, { useState } from 'react';
import moment from 'moment';
import Head from 'next/head';
import { ArrowRightIcon } from '@heroicons/react/outline';


import Form from './components/Form';
import Airports from './components/Airports';

export default function Home() {

  const [ flights, setFlights ] = useState(false);

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container lg">
        <section>
          <div className="max-w-screen-xl pt-16 mx-auto lg:px-8">
            <div className="grid ls-1 gap-x-16 gap-y-8 lg:grid-cols-5">
              <div className="lg:col-span-2 p-8 text-white">
                <h1 className="text-4xl font-medium mb-8">Generate your fake flight ticket here</h1>
                <p className="max-w-xl text-lg">
                  Proof of Onward Travel is required by many countries before you even board an ‚úàÔ∏è airplane. 
                  If you'd like to keep your travel options open & travel on one-way tickets, this hack is perfect for you! 
                  Use this for pranks and anything you like, except for real flights.
                </p>
                <div className="mt-8">
                  <p>We use real flight data & real ticket template, to generate a dummy ticket. Must read FAQ before using üëá</p>
                </div>
              </div>
              <div className="p-8 lg:py-12 lg:col-span-3">
                <Form
                  setFlights={setFlights} 
                />
              </div>
            </div>
          </div>
        </section>
      </main>   
      <Airports className="mt-10" />
      {flights &&
            <section className="max-w-screen-xl pt-16 mx-auto lg:px-8">
                {flights.map(({leg, fare}, idx) => (
                    <section className="mt-10 rounded-lg p-8" key={idx}>
                        <div className="max-w-screen-xl mx-auto">
                            <div className="grid grid-cols-1 text-white sm:grid-cols-[1fr_2fr_1fr] bg-[#10455a] p-8 lg:p-8 hover:shadow-2xl rounded-lg">
                                <div className="grid grid-rows-1 gap-y-5">
                                    <div className="bg-[#F4EBD0] text-zinc-700 border-dashed border-4 border-black rounded-lg text-sm">
                                        {leg.segments.map((segment, key) => 
                                            <div className="grid grid-row p-5" key={key}>
                                                {key === 0 && <p className="ml-auto w-full sm:w-auto line-through text-center sm:text-left text-3xl">${fare.price.amount}</p>}
                                                <p className="font-bold">{segment.airlineCode}</p>
                                                <div>
                                                    <p className="mt-2"><strong>Departure:</strong> {segment.departureAirportCode}</p>
                                                    <p>{moment(new Date(segment.departureDateTime).toDateString()).format('MMMM Do YYYY')} {moment(segment.departureDateTime).format('h:mm a')}</p>
                                                    <p className="mt-2"><strong>Arrival:</strong> {segment.arrivalAirportCode}</p>
                                                    <p>{moment(new Date(segment.arrivalDateTime).toDateString()).format('MMMM Do YYYY')} {moment(segment.arrivalDateTime).format('h:mm a')}</p>
                                                </div>
                                                <div>
                                                </div>
                                            </div>
                                        )}
                                    </div>
                                </div>
                                <div className="flex justify-evenly items-center text-center sm:text-3xl">
                                    <div>
                                        <p className="text-xl">{moment(new Date(leg.departureDateTime).toDateString()).format('MMM Do')}</p>
                                        <p className="text-xl">{moment(leg.departureDateTime).format('h:mm a')}</p>
                                        <p className="font-bold sm:text-6xl">{leg.departureAirportCode}</p>
                                    </div>
                                    <div className="font-white">
                                      <ArrowRightIcon className="h-10 sm:h-20 font-white" />
                                    </div>
                                    <div>
                                        <p className="text-xl">{moment(new Date(leg.arrivalDateTime).toDateString()).format('MMM Do')}</p>
                                        <p className="text-xl">{moment(leg.arrivalDateTime).format('h:mm a')}</p>
                                        <p className="font-bold sm:text-6xl">{leg.arrivalAirportCode}</p>
                                    </div>
                                </div>
                                <div className="flex flex-col items-center gap-5 sm:gap-1 sm:text-right">
                                    <p className="ml-auto w-full sm:w-auto text-center sm:text-left text-3xl">$5.00</p>
                                    <button
                                        type="submit"
                                        className="px-5 py-3 text-white bg-black rounded-lg w-4/12 sm:ml-auto">
                                            <span className="font-medium">Select</span>
                                    </button>
                                </div>
                            </div>
                            <div></div>
                        </div>
                    </section>
                ))}
            </section> 
        }
    </div>
  )
}
